package com.netease.nim.uikit.common.util.media;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Build;
import android.os.IBinder;
import android.provider.Settings;
import android.util.Log;

import java.lang.reflect.Method;

/**
 * MediaService帮助类
 * Created by Maclaine on 2017/7/20.
 */
public class MediaServiceHelper {
    //音频
    private static Intent mediaIntent = null;

    public static boolean hasRequestPermission;

    private static Intent getMediaIntent(Context context) {
        try {
            if (mediaIntent == null) {
                Class clazz = Class.forName("com.pointhouse.chiguan.Application.MediaService");
                mediaIntent = new Intent(context, clazz);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return mediaIntent;
    }

    public static void getService(final Context context, final String methodName) {
        context.bindService(getMediaIntent(context), new ServiceConnection() {

            @Override
            public void onServiceConnected(ComponentName name, IBinder service) {
                try {
                    Class mediaBinderClass = Class.forName("com.pointhouse.chiguan.Application.MediaService$MediaBinder");
                    Object mediaBinder = mediaBinderClass.cast(service);
                    Method getService = mediaBinderClass.getMethod("getService");
                    Object mediaService = getService.invoke(mediaBinder);
                    Class mediaServiceClass = mediaService.getClass();
                    Method method = mediaServiceClass.getMethod(methodName);
                    method.invoke(mediaService);
                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    try {
                        context.unbindService(this);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }

            @Override
            public void onServiceDisconnected(ComponentName name) {

            }
        }, Context.BIND_AUTO_CREATE);
    }

    public static boolean hasPermission(Context context) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            if (!Settings.canDrawOverlays(context)) {
                return false;
            }
        }
        return true;
    }
}
